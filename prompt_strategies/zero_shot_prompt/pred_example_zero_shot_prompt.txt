SELECT s.Name AS Stadium_Name, COUNT(c.concert_ID) AS Number_of_Concerts FROM stadium s INNER JOIN concert c ON s.Stadium_ID = c.Stadium_ID GROUP BY s.Stadium_ID	concert_singer
SELECT s.Name AS Stadium_Name, COUNT(DISTINCT c.concert_ID) AS Number_of_Concerts FROM stadium s INNER JOIN concert c ON s.Stadium_ID = c.Stadium_ID GROUP BY s.Stadium_ID	concert_singer
SELECT s.Name, COUNT(DISTINCT sic.concert_ID) AS Number_of_Concerts FROM singer s INNER JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID GROUP BY s.Name	concert_singer
SELECT s.Name, COUNT(DISTINCT sic.concert_ID) AS Number_of_Concerts FROM singer s INNER JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID GROUP BY s.Name	concert_singer
SELECT DISTINCT s.StuID FROM Student s WHERE s.StuID NOT IN ( SELECT hp.StuID FROM Has_Pet hp INNER JOIN Pets p ON hp.PetID = p.PetID WHERE LOWER(p.PetType) = 'cat')	pets_1
SELECT DISTINCT s.Fname, s.Age FROM Student s INNER JOIN Has_Pet hp ON s.StuID = hp.StuID	pets_1
SELECT c.Continent, COUNT(DISTINCT cm.Id) AS CarMakerCount FROM continents c INNER JOIN countries co ON c.ContId = co.Continent INNER JOIN car_makers cm ON LOWER(cm.Country) = LOWER(co.CountryName) GROUP BY c.Continent	car_1
SELECT COUNT(DISTINCT cm.Id) AS NumberOfCarMakers FROM car_makers cm INNER JOIN countries c ON LOWER(cm.Country) = LOWER(c.CountryName) WHERE LOWER(c.CountryName) = 'france'	car_1
SELECT COUNT(DISTINCT cm.Id) AS NumberOfMakers FROM car_makers cm INNER JOIN countries c ON LOWER(cm.Country) = LOWER(c.CountryName) WHERE LOWER(c.CountryName) = 'france'	car_1
SELECT COUNT(DISTINCT ml.ModelId) AS NumberOfModels FROM model_list ml INNER JOIN car_makers cm ON ml.Maker = cm.Id WHERE LOWER(cm.Country) = 'usa'	car_1
SELECT COUNT(DISTINCT ml.ModelId) AS ModelCount FROM model_list ml INNER JOIN car_makers cm ON ml.Maker = cm.Id INNER JOIN countries c ON LOWER(cm.Country) = LOWER(c.CountryName) WHERE LOWER(c.CountryName) = 'usa'	car_1
SELECT DISTINCT LOWER(countries.CountryName) AS CountryName FROM countries INNER JOIN continents ON countries.Continent = continents.ContId INNER JOIN car_makers ON LOWER(car_makers.Country) = LOWER(countries.CountryName) WHERE LOWER(continents.Continent) = 'europe' GROUP BY countries.CountryId HAVING COUNT(DISTINCT car_makers.Id) >= 3	car_1
SELECT DISTINCT LOWER(countries.CountryName) AS CountryName FROM countries INNER JOIN car_makers ON LOWER(countries.CountryName) = LOWER(car_makers.Country) WHERE countries.Continent = (SELECT ContId FROM continents WHERE LOWER(Continent) = 'europe') GROUP BY countries.CountryName HAVING COUNT(DISTINCT car_makers.Id) >= 3	car_1
SELECT Cylinders FROM cars_data WHERE Id = ( SELECT MakeId FROM car_names WHERE LOWER(Make) = 'volvo' ORDER BY Accelerate ASC LIMIT 1) LIMIT 1	car_1
SELECT DISTINCT ml.Model FROM model_list ml INNER JOIN car_makers cm ON ml.Maker = cm.Id INNER JOIN car_names cn ON ml.Model = cn.Model INNER JOIN cars_data cd ON cn.MakeId = cd.Id WHERE cd.Weight < 3500 AND LOWER(cm.FullName) != 'ford motor company'	car_1
SELECT a.Airline FROM airlines a INNER JOIN flights f ON a.uid = f.Airline GROUP BY a.Airline ORDER BY COUNT(f.FlightNo) DESC LIMIT 1	flight_2
SELECT a.Abbreviation, a.Country FROM airlines a JOIN ( SELECT Airline, COUNT(*) AS flight_count FROM flights GROUP BY Airline ORDER BY flight_count ASC LIMIT 1) AS min_flights ON a.uid = min_flights.Airline	flight_2
SELECT a.Abbreviation, a.Country FROM airlines a JOIN ( SELECT f.Airline, COUNT(*) AS flight_count FROM flights f GROUP BY f.Airline ORDER BY flight_count ASC LIMIT 1) AS min_flights ON a.uid = min_flights.Airline	flight_2
SELECT s.Name AS Shop_Name, COUNT(DISTINCT h.Employee_ID) AS Number_of_Employees FROM shop s INNER JOIN hiring h ON s.Shop_ID = h.Shop_ID GROUP BY s.Shop_ID	employee_hire_evaluation
SELECT s.Name AS Shop_Name, COUNT(DISTINCT h.Employee_ID) AS Number_of_Employees FROM shop s INNER JOIN hiring h ON s.Shop_ID = h.Shop_ID GROUP BY s.Shop_ID	employee_hire_evaluation
SELECT  t.Template_ID,  COUNT(DISTINCT d.Document_ID) AS Number_of_Documents FROM  Templates t INNER JOIN  Documents d ON t.Template_ID = d.Template_ID GROUP BY  t.Template_ID	cre_Doc_Template_Mgt
SELECT t.Template_ID, t.Template_Type_Code FROM Templates t JOIN Documents d ON t.Template_ID = d.Template_ID GROUP BY t.Template_ID, t.Template_Type_Code ORDER BY COUNT(DISTINCT d.Document_ID) DESC LIMIT 1	cre_Doc_Template_Mgt
SELECT t.Template_ID, t.Template_Type_Code FROM Templates t JOIN Documents d ON t.Template_ID = d.Template_ID GROUP BY t.Template_ID, t.Template_Type_Code ORDER BY COUNT(DISTINCT d.Document_ID) DESC LIMIT 1	cre_Doc_Template_Mgt
SELECT  rtt.Template_Type_Code,  COUNT(DISTINCT d.Document_ID) AS Number_of_Documents FROM  Ref_Template_Types rtt INNER JOIN  Templates t ON rtt.Template_Type_Code = t.Template_Type_Code INNER JOIN  Documents d ON t.Template_ID = d.Template_ID GROUP BY  rtt.Template_Type_Code	cre_Doc_Template_Mgt
SELECT DISTINCT t.Template_Type_Code, COUNT(d.Document_ID) AS Document_Count FROM Templates t INNER JOIN Documents d ON t.Template_ID = d.Template_ID GROUP BY t.Template_Type_Code	cre_Doc_Template_Mgt
SELECT DISTINCT rtt.Template_Type_Code FROM Ref_Template_Types rtt LEFT JOIN Templates t ON rtt.Template_Type_Code = t.Template_Type_Code LEFT JOIN Documents d ON t.Template_ID = d.Template_ID WHERE d.Document_ID IS NULL	cre_Doc_Template_Mgt
SELECT DISTINCT rtt.Template_Type_Code FROM Ref_Template_Types rtt LEFT JOIN Templates t ON rtt.Template_Type_Code = t.Template_Type_Code LEFT JOIN Documents d ON t.Template_ID = d.Template_ID WHERE d.Document_ID IS NULL	cre_Doc_Template_Mgt
SELECT  d.Document_ID,  COUNT(p.Paragraph_ID) AS Number_of_Paragraphs FROM  Documents d INNER JOIN  Paragraphs p ON d.Document_ID = p.Document_ID GROUP BY  d.Document_ID ORDER BY  d.Document_ID	cre_Doc_Template_Mgt
SELECT  d.Document_ID,  d.Document_Name,  COUNT(p.Paragraph_ID) AS Number_of_Paragraphs FROM  Documents d INNER JOIN  Paragraphs p ON d.Document_ID = p.Document_ID GROUP BY  d.Document_ID,  d.Document_Name	cre_Doc_Template_Mgt
SELECT  d.Document_ID,  d.Document_Name,  COUNT(p.Paragraph_ID) AS Number_of_Paragraphs FROM  Documents d INNER JOIN  Paragraphs p ON d.Document_ID = p.Document_ID GROUP BY  d.Document_ID,  d.Document_Name	cre_Doc_Template_Mgt
SELECT t.Name, COUNT(DISTINCT ca.Course_ID) AS NumberOfCourses FROM teacher t INNER JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID GROUP BY t.Teacher_ID	course_teach
SELECT t.Name, COUNT(DISTINCT ca.Course_ID) AS Course_Count FROM teacher t INNER JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID GROUP BY t.Name	course_teach
SELECT DISTINCT v.ID, v.Name, v.Age FROM visitor v INNER JOIN visit vi ON v.ID = vi.visitor_ID GROUP BY v.ID, v.Name, v.Age HAVING COUNT(DISTINCT vi.Museum_ID) > 1	museum_visit
SELECT COUNT(DISTINCT match_num)  FROM matches  WHERE year IN (2013, 2016)	wta_1
SELECT p.first_name, p.last_name, m.winner_rank_points FROM players p INNER JOIN matches m ON p.player_id = m.winner_id GROUP BY m.winner_id ORDER BY COUNT(m.winner_id) DESC LIMIT 1	wta_1
SELECT p.first_name || ' ' || p.last_name AS winner_name, r.ranking_points FROM players p INNER JOIN ( SELECT winner_id, COUNT(*) AS win_count FROM matches GROUP BY winner_id ORDER BY win_count DESC LIMIT 1) AS top_winner ON p.player_id = top_winner.winner_id INNER JOIN rankings r ON p.player_id = r.player_id ORDER BY r.ranking_date DESC LIMIT 1	wta_1
SELECT p.first_name, AVG(r.ranking) AS average_ranking FROM players p INNER JOIN rankings r ON p.player_id = r.player_id GROUP BY p.first_name	wta_1
SELECT p.first_name, SUM(r.ranking_points) AS total_ranking_points FROM players p INNER JOIN rankings r ON p.player_id = r.player_id GROUP BY p.first_name	wta_1
SELECT DISTINCT c.course_id, c.course_name FROM Courses c LEFT JOIN Sections s ON c.course_id = s.course_id GROUP BY c.course_id, c.course_name HAVING COUNT(s.section_id) < 2	student_transcripts_tracking
SELECT DISTINCT s.first_name, s.middle_name, s.last_name FROM Students s INNER JOIN Student_Enrolment se ON s.student_id = se.student_id INNER JOIN Degree_Programs dp ON se.degree_program_id = dp.degree_program_id WHERE LOWER(dp.degree_summary_name) LIKE '%bachelor%'	student_transcripts_tracking
SELECT DISTINCT s.first_name, s.middle_name, s.last_name FROM Students s INNER JOIN Student_Enrolment se ON s.student_id = se.student_id INNER JOIN Degree_Programs dp ON se.degree_program_id = dp.degree_program_id WHERE LOWER(dp.degree_summary_name) LIKE '%bachelor%'	student_transcripts_tracking
SELECT c.course_name FROM Courses c JOIN Student_Enrolment_Courses sec ON c.course_id = sec.course_id GROUP BY c.course_id, c.course_name ORDER BY COUNT(DISTINCT sec.student_enrolment_id) DESC LIMIT 1	student_transcripts_tracking
SELECT c.course_name FROM Courses c INNER JOIN Student_Enrolment_Courses sec ON c.course_id = sec.course_id GROUP BY c.course_id, c.course_name ORDER BY COUNT(DISTINCT sec.student_enrolment_id) DESC LIMIT 1	student_transcripts_tracking
SELECT sec.course_id, COUNT(DISTINCT tc.transcript_id) AS transcript_count FROM Student_Enrolment_Courses sec INNER JOIN Transcript_Contents tc ON sec.student_course_id = tc.student_course_id GROUP BY sec.course_id ORDER BY transcript_count DESC LIMIT 1	student_transcripts_tracking
SELECT DISTINCT Package_Option, series_name FROM TV_Channel WHERE LOWER(Hight_definition_TV) = 'yes'	tvshow
SELECT DISTINCT LOWER(Country) FROM TV_Channel WHERE LOWER(id) NOT IN ( SELECT DISTINCT LOWER(Channel) FROM Cartoon WHERE LOWER(Written_by) = 'todd casey')	tvshow
SELECT DISTINCT  LOWER(tc.series_name) AS series_name,  LOWER(tc.Country) AS country FROM  TV_Channel tc INNER JOIN  Cartoon c ON LOWER(tc.id) = LOWER(c.Channel) WHERE  LOWER(c.Directed_by) IN ('ben jones', 'michael chang')	tvshow
SELECT area_code FROM AREA_CODE_STATE JOIN ( SELECT SUBSTR(phone_number, 1, 3) AS area_code, COUNT(DISTINCT vote_id) AS vote_count FROM VOTES GROUP BY area_code ORDER BY vote_count DESC LIMIT 1) AS vote_counts ON AREA_CODE_STATE.area_code = vote_counts.area_code	voter_1
SELECT DISTINCT acs.area_code FROM VOTES v1 INNER JOIN VOTES v2 ON v1.phone_number = v2.phone_number INNER JOIN CONTESTANTS c1 ON v1.contestant_number = c1.contestant_number INNER JOIN CONTESTANTS c2 ON v2.contestant_number = c2.contestant_number INNER JOIN AREA_CODE_STATE acs ON v1.state = acs.state WHERE LOWER(c1.contestant_name) = 'tabatha gehling' AND LOWER(c2.contestant_name) = 'kelly clauss'	voter_1
SELECT AVG(GNP) AS AverageGNP, SUM(Population) AS TotalPopulation FROM country WHERE LOWER(GovernmentForm) = 'us territory'	world_1
SELECT AVG(c.GNP) AS MeanGNP, SUM(c.Population) AS TotalPopulation FROM country c WHERE LOWER(c.Name) LIKE '%united states%'	world_1
SELECT c.Name FROM country c INNER JOIN countrylanguage cl ON c.Code = cl.CountryCode GROUP BY c.Code ORDER BY COUNT(DISTINCT cl.Language) DESC LIMIT 1	world_1
SELECT country.Name FROM country INNER JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Code ORDER BY COUNT(DISTINCT countrylanguage.Language) DESC LIMIT 1	world_1
SELECT DISTINCT c.Code FROM country c WHERE c.Code NOT IN ( SELECT cl.CountryCode FROM countrylanguage cl WHERE LOWER(cl.Language) = 'english')	world_1
SELECT DISTINCT c.GovernmentForm, SUM(c.Population) AS TotalPopulation FROM country c WHERE c.GovernmentForm IN ( SELECT GovernmentForm FROM country GROUP BY GovernmentForm HAVING AVG(LifeExpectancy) > 72) GROUP BY c.GovernmentForm	world_1
SELECT CountryCode FROM countrylanguage WHERE LOWER(Language) = 'spanish' ORDER BY Percentage DESC LIMIT 1	world_1
SELECT Name FROM conductor WHERE Conductor_ID = ( SELECT Conductor_ID FROM orchestra GROUP BY Conductor_ID ORDER BY COUNT(DISTINCT Orchestra_ID) DESC LIMIT 1)	orchestra
SELECT DISTINCT grade FROM Highschooler;
SELECT Highschooler.ID, Highschooler.name, COUNT(DISTINCT Friend.friend_id) AS friend_count FROM Highschooler INNER JOIN Friend ON Highschooler.ID = Friend.student_id GROUP BY Highschooler.ID, Highschooler.name	network_1
SELECT H.name, COUNT(DISTINCT F.friend_id) AS number_of_friends FROM Highschooler H LEFT JOIN Friend F ON H.ID = F.student_id GROUP BY H.ID	network_1
SELECT H.name, COUNT(DISTINCT F.friend_id) AS number_of_friends FROM Highschooler H LEFT JOIN Friend F ON H.ID = F.student_id GROUP BY H.ID	network_1
SELECT AVG(CAST(d.age AS INTEGER)) AS average_age FROM Dogs d INNER JOIN Treatments t ON d.dog_id = t.dog_id	dog_kennels
SELECT AVG(CAST(age AS INTEGER)) AS average_age FROM Dogs WHERE dog_id IN (SELECT DISTINCT dog_id FROM Treatments)	dog_kennels
SELECT COUNT(DISTINCT o.owner_id) AS number_of_owners FROM Owners o LEFT JOIN Dogs d ON o.owner_id = d.owner_id WHERE d.dog_id IS NULL	dog_kennels
SELECT DISTINCT b.breed_name, s.size_description FROM Breeds b CROSS JOIN Sizes s	dog_kennels
SELECT DISTINCT p.first_name, tt.treatment_type_description FROM Professionals p INNER JOIN Treatments t ON p.professional_id = t.professional_id INNER JOIN Treatment_Types tt ON t.treatment_type_code = tt.treatment_type_code	dog_kennels
SELECT DISTINCT  p.first_name,  tt.treatment_type_description FROM  Professionals p INNER JOIN  Treatments t ON p.professional_id = t.professional_id INNER JOIN  Treatment_Types tt ON t.treatment_type_code = tt.treatment_type_code	dog_kennels
SELECT s.Name, SUM(so.Sales) AS Total_Sales FROM singer s INNER JOIN song so ON s.Singer_ID = so.Singer_ID GROUP BY s.Singer_ID, s.Name	singer
SELECT DISTINCT property_name FROM Properties WHERE room_count > 1 AND property_type_code IN ( SELECT property_type_code FROM Ref_Property_Types WHERE LOWER(property_type_description) IN ('house', 'apartment'))	real_estate_properties