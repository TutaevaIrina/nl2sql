SELECT s.Name AS Stadium_Name, COUNT(c.concert_ID) AS Number_of_Concerts FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID GROUP BY s.Stadium_ID, s.Name	concert_singer
SELECT s.Name AS Stadium_Name, COUNT(c.concert_ID) AS Number_of_Concerts FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID GROUP BY s.Stadium_ID, s.Name	concert_singer
SELECT s.Name AS Singer_Name, COUNT(sic.concert_ID) AS Number_of_Concerts FROM singer s JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID GROUP BY s.Singer_ID, s.Name	concert_singer
SELECT s.Name AS Singer_Name, COUNT(sic.concert_ID) AS Number_of_Concerts FROM singer s JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID GROUP BY s.Singer_ID, s.Name	concert_singer
SELECT StuID FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE LOWER(PetType) = LOWER('cat')))	pets_1
SELECT DISTINCT S.Fname, S.Age FROM Student S INNER JOIN Has_Pet HP ON S.StuID = HP.StuID	pets_1
SELECT co.Continent, COUNT(cm.Id) AS NumberOfCarMakers FROM continents co JOIN countries c ON co.ContId = c.Continent JOIN car_makers cm ON c.CountryId = cm.Country GROUP BY co.Continent	car_1
SELECT COUNT(DISTINCT cm.Id) AS NumberOfCarMakers FROM car_makers cm JOIN countries c ON cm.Country = c.CountryId WHERE LOWER(c.CountryName) = LOWER('France')	car_1
SELECT COUNT(DISTINCT cm.Id) AS NumberOfMakers FROM car_makers cm JOIN countries c ON cm.Country = c.CountryId WHERE LOWER(c.CountryName) = LOWER('France')	car_1
SELECT COUNT(DISTINCT ml.Model) AS NumberOfCarModels FROM model_list ml JOIN car_makers cm ON ml.Maker = cm.Id JOIN countries c ON cm.Country = c.CountryId WHERE LOWER(c.CountryName) = LOWER('USA')	car_1
SELECT COUNT(DISTINCT ml.Model) AS NumberOfCarModels FROM model_list ml JOIN car_makers cm ON ml.Maker = cm.Id JOIN countries c ON cm.Country = c.CountryId WHERE LOWER(c.CountryName) = LOWER('United States')	car_1
SELECT c.CountryName FROM countries c JOIN car_makers cm ON c.CountryId = cm.Country JOIN continents co ON c.Continent = co.ContId WHERE LOWER(co.Continent) = LOWER('Europe') GROUP BY c.CountryName HAVING COUNT(DISTINCT cm.Id) >= 3	car_1
SELECT c.CountryName FROM countries c JOIN car_makers cm ON c.CountryId = cm.Country JOIN continents co ON c.Continent = co.ContId WHERE LOWER(co.Continent) = LOWER('Europe') GROUP BY c.CountryName HAVING COUNT(DISTINCT cm.Id) >= 3	||| car_1
SELECT cd.Cylinders FROM cars_data cd JOIN car_names cn ON cd.Id = cn.MakeId JOIN model_list ml ON cn.Model = ml.Model JOIN car_makers cm ON ml.Maker = cm.Id WHERE LOWER(cm.Maker) = LOWER('Volvo') ORDER BY cd.Accelerate ASC LIMIT 1	car_1
SELECT DISTINCT ml.Model FROM model_list ml JOIN car_makers cm ON ml.Maker = cm.Id JOIN car_names cn ON ml.Model = cn.Model JOIN cars_data cd ON cn.MakeId = cd.Id WHERE cd.Weight < 3500 AND cm.FullName != 'Ford Motor Company'	car_1
SELECT a.Airline FROM airlines a JOIN flights f ON a.uid = f.Airline GROUP BY a.Airline HAVING COUNT(f.FlightNo) = (SELECT MAX(flight_count) FROM (SELECT COUNT(f.FlightNo) AS flight_count FROM flights f GROUP BY f.Airline) AS SubQuery)	flight_2
SELECT a.Abbreviation, a.Country FROM airlines a JOIN flights f ON a.uid = f.Airline GROUP BY a.uid HAVING COUNT(f.FlightNo) = (SELECT MIN(flight_count) FROM (SELECT COUNT(f.FlightNo) AS flight_count FROM flights f GROUP BY f.Airline) AS SubQuery)	flight_2
SELECT a.Abbreviation, a.Country FROM airlines a JOIN flights f ON a.uid = f.Airline GROUP BY a.uid HAVING COUNT(f.FlightNo) = (SELECT MIN(flight_count) FROM (SELECT COUNT(f.FlightNo) AS flight_count FROM flights f GROUP BY f.Airline) AS SubQuery)	flight_2
SELECT s.Name AS Shop_Name, COUNT(h.Employee_ID) AS Number_of_Employees FROM shop s JOIN hiring h ON s.Shop_ID = h.Shop_ID GROUP BY s.Shop_ID, s.Name	employee_hire_evaluation
SELECT s.Name AS Shop_Name, COUNT(h.Employee_ID) AS Number_of_Employees FROM shop s JOIN hiring h ON s.Shop_ID = h.Shop_ID GROUP BY s.Shop_ID, s.Name	employee_hire_evaluation
SELECT T.Template_ID, COUNT(D.Document_ID) AS NumberOfDocuments FROM Templates T JOIN Documents D ON T.Template_ID = D.Template_ID GROUP BY T.Template_ID	cre_Doc_Template_Mgt
SELECT T.Template_ID, T.Template_Type_Code FROM Templates T JOIN Documents D ON T.Template_ID = D.Template_ID GROUP BY T.Template_ID, T.Template_Type_Code HAVING COUNT(D.Document_ID) = (SELECT MAX(DocumentCount) FROM (SELECT COUNT(Doc.Document_ID) AS DocumentCount FROM Documents Doc GROUP BY Doc.Template_ID) AS SubQuery)	cre_Doc_Template_Mgt
SELECT T.Template_ID, T.Template_Type_Code FROM Templates T JOIN Documents D ON T.Template_ID = D.Template_ID GROUP BY T.Template_ID, T.Template_Type_Code HAVING COUNT(D.Document_ID) = (SELECT MAX(DocumentCount) FROM (SELECT COUNT(Doc.Document_ID) AS DocumentCount FROM Templates Temp JOIN Documents Doc ON Temp.Template_ID = Doc.Template_ID GROUP BY Temp.Template_ID) AS SubQuery)	cre_Doc_Template_Mgt
SELECT T.Template_Type_Code, COUNT(D.Document_ID) AS NumberOfDocuments FROM Templates T JOIN Documents D ON T.Template_ID = D.Template_ID GROUP BY T.Template_Type_Code	cre_Doc_Template_Mgt
SELECT T.Template_Type_Code, COUNT(D.Document_ID) AS NumberOfDocuments FROM Templates T JOIN Documents D ON T.Template_ID = D.Template_ID GROUP BY T.Template_Type_Code	cre_Doc_Template_Mgt
SELECT rtt.Template_Type_Code FROM Ref_Template_Types rtt WHERE rtt.Template_Type_Code NOT IN (SELECT DISTINCT t.Template_Type_Code FROM Templates t JOIN Documents d ON t.Template_ID = d.Template_ID)	cre_Doc_Template_Mgt
SELECT DISTINCT rt.Template_Type_Code FROM Ref_Template_Types rt WHERE rt.Template_Type_Code NOT IN (SELECT t.Template_Type_Code FROM Templates t JOIN Documents d ON t.Template_ID = d.Template_ID)	cre_Doc_Template_Mgt
SELECT D.Document_ID, COUNT(P.Paragraph_ID) AS NumberOfParagraphs FROM Documents D JOIN Paragraphs P ON D.Document_ID = P.Document_ID GROUP BY D.Document_ID ORDER BY D.Document_ID	cre_Doc_Template_Mgt
SELECT D.Document_ID, D.Document_Name, COUNT(P.Paragraph_ID) AS NumberOfParagraphs FROM Documents D JOIN Paragraphs P ON D.Document_ID = P.Document_ID GROUP BY D.Document_ID, D.Document_Name	cre_Doc_Template_Mgt
SELECT D.Document_ID, D.Document_Name, COUNT(P.Paragraph_ID) AS NumberOfParagraphs FROM Documents D JOIN Paragraphs P ON D.Document_ID = P.Document_ID GROUP BY D.Document_ID, D.Document_Name	cre_Doc_Template_Mgt
SELECT t.Name, COUNT(ca.Course_ID) AS NumberOfCourses FROM teacher t JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID GROUP BY t.Teacher_ID	course_teach
SELECT t.Name, COUNT(ca.Course_ID) AS NumberOfCourses FROM teacher t JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID GROUP BY t.Teacher_ID	course_teach
SELECT v.ID, v.Name, v.Age FROM visitor v JOIN visit vi ON v.ID = vi.visitor_ID GROUP BY v.ID HAVING COUNT(vi.Museum_ID) > 1	museum_visit
SELECT COUNT(*) AS NumberOfMatches FROM matches WHERE year = 2013 OR year = 2016	wta_1
SELECT m.winner_name, SUM(m.winner_rank_points) AS total_rank_points FROM matches m GROUP BY m.winner_id, m.winner_name HAVING COUNT(m.winner_id) = (SELECT MAX(win_count) FROM (SELECT COUNT(winner_id) AS win_count FROM matches GROUP BY winner_id) AS subquery)	wta_1
SELECT p.first_name, p.last_name, SUM(m.winner_rank_points) AS total_rank_points FROM players p JOIN matches m ON p.player_id = m.winner_id GROUP BY p.player_id, p.first_name, p.last_name HAVING COUNT(m.winner_id) = (SELECT MAX(match_count) FROM (SELECT COUNT(winner_id) AS match_count FROM matches GROUP BY winner_id) AS subquery)	wta_1
SELECT p.first_name, AVG(r.ranking) AS average_ranking FROM players p JOIN rankings r ON p.player_id = r.player_id GROUP BY p.first_name	wta_1
SELECT p.first_name, SUM(r.ranking_points) AS total_ranking_points FROM players p JOIN rankings r ON p.player_id = r.player_id GROUP BY p.first_name	wta_1
SELECT c.course_id, c.course_name FROM Courses c JOIN Sections s ON c.course_id = s.course_id GROUP BY c.course_id, c.course_name HAVING COUNT(s.section_id) < 2	student_transcripts_tracking
SELECT DISTINCT S.first_name, S.middle_name, S.last_name FROM Students S JOIN Student_Enrolment SE ON S.student_id = SE.student_id JOIN Degree_Programs DP ON SE.degree_program_id = DP.degree_program_id WHERE LOWER(DP.degree_summary_name) LIKE '%bachelor%'	student_transcripts_tracking
SELECT DISTINCT S.first_name, S.middle_name, S.last_name FROM Students S JOIN Student_Enrolment SE ON S.student_id = SE.student_id JOIN Degree_Programs DP ON SE.degree_program_id = DP.degree_program_id WHERE LOWER(DP.degree_summary_name) LIKE '%bachelors%'	student_transcripts_tracking
SELECT c.course_name FROM Courses c JOIN Student_Enrolment_Courses sec ON c.course_id = sec.course_id GROUP BY c.course_id, c.course_name HAVING COUNT(sec.student_course_id) = (SELECT MAX(enrollment_count) FROM (SELECT COUNT(sec_sub.student_course_id) AS enrollment_count FROM Student_Enrolment_Courses sec_sub GROUP BY sec_sub.course_id) AS SubQuery)	student_transcripts_tracking
SELECT c.course_name FROM Courses c JOIN Student_Enrolment_Courses sec ON c.course_id = sec.course_id GROUP BY c.course_id, c.course_name HAVING COUNT(sec.student_course_id) = (SELECT MAX(student_count) FROM (SELECT COUNT(sec_sub.student_course_id) AS student_count FROM Student_Enrolment_Courses sec_sub GROUP BY sec_sub.course_id) AS SubQuery)	student_transcripts_tracking
SELECT student_course_id, COUNT(transcript_id) AS count FROM Transcript_Contents GROUP BY student_course_id HAVING COUNT(transcript_id) = (SELECT MAX(count) FROM (SELECT COUNT(transcript_id) AS count FROM Transcript_Contents GROUP BY student_course_id) AS SubQuery)	student_transcripts_tracking
SELECT DISTINCT TC.Package_Option, TC.series_name FROM TV_Channel TC WHERE LOWER(TC.Hight_definition_TV) = LOWER('yes');	tvshow
SELECT DISTINCT TC.Country FROM TV_Channel TC WHERE TC.id NOT IN (SELECT C.Channel FROM Cartoon C WHERE C.Written_by = 'Todd Casey')	tvshow
SELECT DISTINCT TC.series_name, TC.Country FROM TV_Channel TC WHERE TC.id IN (SELECT c1.Channel FROM Cartoon c1 JOIN Cartoon c2 ON c1.Channel = c2.Channel WHERE c1.Directed_by = 'Ben Jones' AND c2.Directed_by = 'Michael Chang')	tvshow
SELECT T1.area_code, COUNT(*) FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state GROUP BY T1.area_code HAVING COUNT(*) = (SELECT MAX(vote_count) FROM (SELECT COUNT(*) AS vote_count FROM AREA_CODE_STATE AS S1 JOIN VOTES AS S2 ON S1.state = S2.state GROUP BY S1.area_code) AS SubQuery)	voter_1
SELECT DISTINCT acs.area_code FROM AREA_CODE_STATE acs JOIN VOTES v1 ON acs.state = v1.state JOIN VOTES v2 ON acs.state = v2.state JOIN CONTESTANTS c1 ON v1.contestant_number = c1.contestant_number JOIN CONTESTANTS c2 ON v2.contestant_number = c2.contestant_number WHERE c1.contestant_name = 'Tabatha Gehling' AND c2.contestant_name = 'Kelly Clauss' AND v1.phone_number = v2.phone_number	voter_1
SELECT AVG(GNP) AS AverageGNP, SUM(Population) AS TotalPopulation FROM country WHERE LOWER(GovernmentForm) = LOWER('US territory')	world_1
SELECT AVG(GNP) AS MeanGNP, SUM(Population) AS TotalPopulation FROM country WHERE LOWER(Region) = LOWER('US territory')	world_1
SELECT c.Name FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode GROUP BY c.Code HAVING COUNT(cl.Language) = (SELECT MAX(LanguageCount) FROM (SELECT COUNT(cl_sub.Language) AS LanguageCount FROM country c_sub JOIN countrylanguage cl_sub ON c_sub.Code = cl_sub.CountryCode GROUP BY c_sub.Code) AS SubQuery)	world_1
SELECT c.Name FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode GROUP BY c.Code HAVING COUNT(cl.Language) = (SELECT MAX(LanguageCount) FROM (SELECT COUNT(cl_sub.Language) AS LanguageCount FROM country c_sub JOIN countrylanguage cl_sub ON c_sub.Code = cl_sub.CountryCode GROUP BY c_sub.Code) AS SubQuery)	world_1
SELECT DISTINCT c.Code FROM country c WHERE c.Code NOT IN (SELECT cl.CountryCode FROM countrylanguage cl WHERE LOWER(cl.Language) = LOWER('English'))	world_1
SELECT GovernmentForm, SUM(Population) AS TotalPopulation FROM country GROUP BY GovernmentForm HAVING AVG(LifeExpectancy) > 72	world_1
SELECT cl.CountryCode FROM countrylanguage cl WHERE cl.Language = 'Spanish' AND cl.Percentage = (SELECT MAX(cl_sub.Percentage) FROM countrylanguage cl_sub WHERE cl_sub.Language = 'Spanish')	world_1
SELECT c.Name FROM conductor c JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID GROUP BY c.Conductor_ID HAVING COUNT(DISTINCT o.Orchestra_ID) = (SELECT MAX(OrchestraCount) FROM (SELECT COUNT(DISTINCT o_sub.Orchestra_ID) AS OrchestraCount FROM orchestra o_sub GROUP BY o_sub.Conductor_ID) AS SubQuery)	orchestra
SELECT grade FROM Highschooler	network_1
SELECT H.ID, H.name, COUNT(F.friend_id) AS NumberOfFriends FROM Highschooler H JOIN Friend F ON H.ID = F.student_id GROUP BY H.ID, H.name	network_1
SELECT H.name, COUNT(F.friend_id) AS NumberOfFriends FROM Highschooler H JOIN Friend F ON H.ID = F.student_id GROUP BY H.ID, H.name	network_1
SELECT H.name, COUNT(F.friend_id) AS NumberOfFriends FROM Highschooler H LEFT JOIN Friend F ON H.ID = F.student_id GROUP BY H.ID, H.name	network_1
SELECT AVG(CAST(age AS INTEGER)) AS AverageAge FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments)	dog_kennels
SELECT AVG(age) FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments)	dog_kennels
SELECT COUNT(DISTINCT o.owner_id) AS NumberOfOwnersWithoutDogs FROM Owners o LEFT JOIN Dogs d ON o.owner_id = d.owner_id WHERE d.dog_id IS NULL	dog_kennels
SELECT DISTINCT d.breed_code, d.size_code FROM Dogs d	dog_kennels
SELECT DISTINCT P.first_name, TT.treatment_type_description FROM Professionals P JOIN Treatments T ON P.professional_id = T.professional_id JOIN Treatment_Types TT ON T.treatment_type_code = TT.treatment_type_code	dog_kennels
SELECT DISTINCT P.first_name, TT.treatment_type_description FROM Professionals P JOIN Treatments T ON P.professional_id = T.professional_id JOIN Treatment_Types TT ON T.treatment_type_code = TT.treatment_type_code	dog_kennels
SELECT s.Name, SUM(so.Sales) AS Total_Sales FROM singer s JOIN song so ON s.Singer_ID = so.Singer_ID GROUP BY s.Name	singer
SELECT property_name FROM Properties WHERE (property_type_code = 'House' OR property_type_code = 'Apartment') AND room_count > 1	real_estate_properties